const express = require("express");
const db = require("./lib/db");
const router = express.Router();

router.get("/", (req, res) => {
	res.send({
		message: "Hello World",
	});
});

// ADD NEW EVENT - NOT FULLY WORKING
router.post("/events", async (req, res) => {
	const {
		date,
		route,
		task_name,
		task_description,
		spots_available,
	} = req.body;

	// WORKING
	const eventDetails = await db(
		`INSERT INTO events (date, route) VALUES ('${date}','${route}');`
	);

	// WORKING
	const taskDetails = await db(
		`INSERT INTO tasks (task_name, task_description) VALUES ('${task_name}','${task_description}');`
	);

	// NOT WORKING (NEED TO GET THE IDS GENERATED BY THE TWO DB FUNCTIONS ABOVE)
	const volunteersNeeded = await db(
		`INSERT INTO event_tasks (event_id, task_id, spots_available) VALUES (SELECT events.id FROM events WHERE date='${date}' AND route='${route}'), (SELECT tasks.id FROM tasks WHERE task_name='${task_name}'), '${spots_available}';`
	);

	res.status(201).send({});
});

// GET EVENTS (DATE & ROUTE ONLY)
router.get("/events", (req, res) => {
	db("SELECT * FROM events;").then(results => {
		if (results.error) {
			res.status(400).send({ message: "Error" });
		}
		res.send(results.data);
	});
});

// GET EVENTS (FULL INFORMATION)
router.get("/events/:id", async (req, res) => {
	const { id } = req.params;
	const eventData = await db(`SELECT * FROM events where id=${id};`);
	const tasks = await db(
		`SELECT tasks.id, tasks.task_name, tasks.task_description, event_tasks.spots_available FROM event_tasks INNER JOIN tasks ON event_tasks.task_id = tasks.id WHERE event_tasks.event_id = ${id}`
	);

	res.send({
		id: eventData.data[0].id,
		date: eventData.data[0].date,
		route: eventData.data[0].route,
		tasks: tasks.data,
	});
});

/* Another option if needed, that only displays the tasks (no date or route)
  const eventData = event[0];
  res.send({
    ...eventData,
    tasks: tasks.data,
  });
});
*/

// ADD VOLUNTEER
router.post("/registration", (req, res) => {
	const { first_name, last_name, email, phone_number } = req.body;
	db(
		`INSERT INTO volunteers (first_name, last_name, email, phone_number) VALUES ('${first_name}','${last_name}','${email}', '${phone_number}');`
	).then(results => {
		if (!results.error) {
			res.status(201).send({});
		}
	});
});

// MATCH VOLUNTEER TO SELECTED TASK
router.post("/events/:id/attend", (req, res) => {
	const { selected_task_id, volunteer_id } = req.body;
	db(
		`INSERT INTO tasks_volunteers (selected_task_id, volunteer_id) VALUES ('${selected_task_id}','${volunteer_id}');`
	).then(results => {
		if (!results.error) {
			res.status(201).send({});
		}
	});
});

// UPDATE SPOTS AVAILABLE
router.patch("/events/:id", (req, res) => {
	const { id } = req.params;
	const { spots_available } = req.body;

	db(
		`UPDATE event_tasks SET spots_available='${spots_available}' WHERE id='${id}';`
	).then(results => {
		if (!results.error) {
			res.status(201).send({});
		}
	});
});

// GET VOLUNTEER PERSONAL INFO
router.get("/volunteers/:id", (req, res) => {
	const { id } = req.params;
	db(`SELECT * from volunteers WHERE id='${id}';`).then(results => {
		if (results.data[0]) {
			res.status(200).send(results.data[0]);
		}
		res.status(404).send({});
	});
});

// GET VOLUNTEERS & TASKS BY EVENT
router.get("/events/:id/volunteers", async (req, res) => {
	const { id } = req.params;
	const eventData = await db(`SELECT * FROM events where id=${id};`);
	const volunteers = await db(
		`SELECT tasks.task_name, volunteers.first_name, volunteers.last_name, volunteers.email, volunteers.phone_number FROM tasks_volunteers INNER JOIN volunteers ON volunteers.id = tasks_volunteers.volunteer_id INNER JOIN event_tasks ON event_tasks.id = tasks_volunteers.selected_task_id INNER JOIN events ON events.id = event_tasks.event_id INNER JOIN tasks ON tasks.id = event_tasks.task_id WHERE events.id = '${id}';`
	);

	res.send({
		date: eventData.data[0].date,
		route: eventData.data[0].route,
		volunteers: volunteers.data,
	});
});

module.exports = router;
